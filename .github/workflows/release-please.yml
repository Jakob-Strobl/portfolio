name: Handle Release

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      isRelease: ${{ steps.release.outputs.release_created }}
    steps:
      - name: run release-please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          target-branch: ${{ github.ref_name }}
          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          release-type: node
          # Because of this open issue, https://github.com/googleapis/release-please-action/issues/937
          # when we set skip-pull-request to true but skip-release to false, the action does not make a release
          # From how I read the docs, this seems like a bug, but I'm not in the mood to go down that rabbit hole now
          # So for now, we will only activate the action on Main and accept PRs into main for the release

      - name: checkout repo
        uses: actions/checkout@v4

      - name: tag major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/googleapis/release-please-action.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}

  trigger-deployment:
    name: deploy release to prod page
    uses: ./.github/workflows/prod-page-deploy.yml
    needs: release-please
    permissions:
      contents: write
      deployments: write
    if: needs.release-please.outputs.isRelease
    with:
      branch: ${{ github.ref_name }}
      
